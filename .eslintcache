[{"C:\\Users\\mike\\projects\\lightbox2\\src\\index.js":"1","C:\\Users\\mike\\projects\\lightbox2\\src\\reportWebVitals.js":"2","C:\\Users\\mike\\projects\\lightbox2\\src\\App.js":"3","C:\\Users\\mike\\projects\\lightbox2\\src\\Lightbox.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":1904,"mtime":1609731812771,"results":"8","hashOfConfig":"6"},{"size":6011,"mtime":1609732911109,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"t8k1mj",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mike\\projects\\lightbox2\\src\\index.js",[],["20","21"],"C:\\Users\\mike\\projects\\lightbox2\\src\\reportWebVitals.js",[],"C:\\Users\\mike\\projects\\lightbox2\\src\\App.js",["22","23"],"import \"./App.css\";\r\nimport styled from \"@emotion/styled\";\r\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport Lightbox from \"./Lightbox\";\r\n\r\nconst Button = styled.button`\r\n  margin: 0;\r\n  width: 200px;\r\n  height: 150px;\r\n  position: relative;\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst PhotoGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nconst GridImage = styled.img`\r\n  display: block;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  min-height: 100%;\r\n  min-width: 100%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nfunction App() {\r\n  const [status, setStatus] = useState(false);\r\n  const [images, setImages] = useState([]);\r\n\r\n  const [idx, setIdx] = useState(null);\r\n\r\n  useEffect(() => {\r\n    function fetchImages() {\r\n      let x = Array(50)\r\n        .fill(true)\r\n        .map((_, i) => ({\r\n          id: i,\r\n          url: `https://picsum.photos/500/500?random=${i}`,\r\n        }));\r\n      setImages(x);\r\n    }\r\n    fetchImages();\r\n  }, [setImages]);\r\n\r\n  useEffect(() => {\r\n    status && (document.body.style.overflow = \"hidden\");\r\n    !status && (document.body.style.overflow = \"unset\");\r\n  }, [status]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>HI!</div>\r\n      <PhotoGrid>\r\n        {images.map((x, i) => (\r\n          <Button\r\n            key={i}\r\n            onClick={() => {\r\n              setIdx(i);\r\n              setStatus((c) => !c);\r\n            }}\r\n          >\r\n            <GridImage src={x.url} alt=\"logo\" />\r\n          </Button>\r\n        ))}\r\n      </PhotoGrid>\r\n\r\n      {status && (\r\n        <Lightbox\r\n          idx={idx}\r\n          setIdx={setIdx}\r\n          images={images}\r\n          setStatus={setStatus}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mike\\projects\\lightbox2\\src\\Lightbox.js",["24","25","26","27","28"],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":3,"column":27,"nodeType":"35","messageId":"36","endLine":3,"endColumn":33},{"ruleId":"33","severity":1,"message":"37","line":3,"column":46,"nodeType":"35","messageId":"36","endLine":3,"endColumn":57},{"ruleId":"33","severity":1,"message":"38","line":10,"column":35,"nodeType":"35","messageId":"36","endLine":10,"endColumn":44},{"ruleId":"39","severity":1,"message":"40","line":84,"column":7,"nodeType":"41","endLine":84,"endColumn":57},{"ruleId":"33","severity":1,"message":"42","line":124,"column":10,"nodeType":"35","messageId":"36","endLine":124,"endColumn":14},{"ruleId":"33","severity":1,"message":"43","line":131,"column":9,"nodeType":"35","messageId":"36","endLine":131,"endColumn":16},{"ruleId":"44","severity":1,"message":"45","line":131,"column":71,"nodeType":"46","endLine":131,"endColumn":73,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useSpring' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'zoom' is assigned a value but never used.","'onClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setIdx'. Either include it or remove the dependency array.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [setIdx]",{"range":"53","text":"54"},[3518,3520],"[setIdx]"]